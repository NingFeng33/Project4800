<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Booking Calendar</title>
    <link href='https://cdn.jsdelivr.net/npm/fullcalendar@latest/main.min.css' rel='stylesheet' />
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        /* General layout */
        .container {
            display: flex;
            flex-wrap: wrap;
        }
    
        .sidebar {
            width: 300px;
            padding: 20px;
            background-color: #f4f4f4;
            border-right: 1px solid #ddd;
        }

        .filter-group {
            margin-bottom: 15px;
        }

        .filter-group select {
            font-size: 0.9em;
        }

        button {
            font-size: 0.9em;
            padding: 5px 10px;
            margin-bottom: 10px; /* Add spacing between buttons */
        }

        #calendar {
            flex-grow: 1;
            max-width: 80%;
            margin: 0 auto;
        }

        /* Event styling */
        .fc-event {
            background-color: #007bff !important; /* Blue background */
            color: white !important; /* White text */
            border: none !important; /* No border */
            border-radius: 8px; /* Rounded corners */
            font-size: 1rem; /* Larger font size */
            line-height: 1.5; /* Spacing between lines */
            padding: 10px; /* Add padding for better readability */
            height: auto !important; /* Allow the height to adjust for content */
            white-space: normal !important; /* Allow text to wrap */
        }

        /* Highlight today's date */
        .fc-day-today {
            background-color: #ffe4b5 !important; /* Light orange background */
        }

        /* Sidebar styling */
        .sidebar {
            background-color: #f8f9fa;
        }
    
        /* Calendar background */
        body {
            background-color: #f8f9fa;
            font-family: Arial, sans-serif;
        }
    </style>
</head>

<body>
    <%- include('partials/top_bar') %>
    <%- include('partials/side_bar') %>

    <main class="main-content">
        <div class="container">
            <div class="sidebar">
                <div class="filter-group">
                    <h3>Filter by Program</h3>
                    <select id="programFilter">
                        <option value="">Select Program</option>
                        <% programs.forEach(function(program) { %>
                            <option value="<%= program.program_id %>"><%= program.program_name %></option>
                        <% }) %>
                    </select>
                </div>

                <div class="filter-group">
                    <h3>Filter by Course</h3>
                    <select id="courseFilter">
                        <option value="">Select Course</option>
                        <% courses.forEach(function(course) { %>
                            <option value="<%= course.course_id %>"><%= course.course_name %></option>
                        <% }) %>
                    </select>
                </div>

                <button id="applyFilter" class="btn btn-primary" style="width: 100%;">Apply Filter</button>
                <button id="resetFilter" class="btn btn-secondary" style="width: 100%;">Reset Filter</button>
            </div>

            <div id='calendar'></div>
        </div>
    </main>

        <!-- Bootstrap Modal -->
        <div class="modal fade" id="eventDetailsModal" tabindex="-1" aria-labelledby="eventDetailsLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="eventDetailsLabel">Event Details</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <!-- Event details will be dynamically inserted here -->
                        <p id="eventDetails"></p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@latest/main.min.js'></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const calendarEl = document.getElementById('calendar');
    
            // Initialize FullCalendar
            window.calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                eventClick: function(info) {
                    const title = info.event.title;
                    const startTime = new Date(info.event.start).toLocaleString();
                    const endTime = new Date(info.event.end).toLocaleString();
                    const extendedProps = info.event.extendedProps;
                
                    // Create event details
                    const details = `
                        <strong>Course:</strong> ${title}<br>
                        <strong>Room:</strong> ${extendedProps.roomNumber || 'N/A'}<br>
                        <strong>Start Time:</strong> ${startTime}<br>
                        <strong>End Time:</strong> ${endTime}<br>
                    `;
                
                    // Insert details into the modal
                    document.getElementById('eventDetails').innerHTML = details;
                
                    // Show the modal
                    const modal = new bootstrap.Modal(document.getElementById('eventDetailsModal'));
                    modal.show();
                }
            });
                
    
            window.calendar.render();
            loadBookingsToCalendar();
    
            // Apply Filter Button Event Listener
            document.getElementById('applyFilter').addEventListener('click', async function() {
                const programId = document.getElementById('programFilter').value;
                const courseId = document.getElementById('courseFilter').value;
    
                try {
                    const response = await fetch(`/api/bookings?programId=${programId}&courseId=${courseId}`);
                    const data = await response.json();
    
                    if (!data.bookings) {
                        console.error("Invalid response format from API:", data);
                        return;
                    }
    
                    // Clear and update calendar events
                    window.calendar.removeAllEvents();
                    data.bookings.forEach(booking => {
                        window.calendar.addEvent({
                            title: `Course: ${booking.course_code} - ${booking.course_name}`,
                            start: new Date(booking.start_time).toISOString(),
                            end: new Date(booking.end_time).toISOString(),
                            extendedProps: {
                                roomNumber: booking.room_number,
                                courseId: booking.course_id,
                            }
                        });
                    });
                    window.calendar.render();
                } catch (error) {
                    console.error("Failed to load filtered bookings:", error);
                }
            });
    
            // Reset Filter Button Event Listener
            document.getElementById('resetFilter').addEventListener('click', async function() {
                // Clear filter selections
                document.getElementById('programFilter').value = '';
                document.getElementById('courseFilter').value = '';
    
                // Reload all bookings
                loadBookingsToCalendar();
            });
        });
    
        // Load all bookings when the page loads
        async function loadBookingsToCalendar() {
            try {
                const response = await fetch('/api/bookings');
                const data = await response.json();
    
                if (!data.bookings) {
                    console.error("Invalid response format from API:", data);
                    return;
                }
    
                // Clear and populate calendar events
                window.calendar.removeAllEvents();
                data.bookings.forEach(booking => {
                    window.calendar.addEvent({
                        title: `Course: ${booking.course_code} - ${booking.course_name}`,
                        start: new Date(booking.start_time).toISOString(),
                        end: new Date(booking.end_time).toISOString(),
                        extendedProps: {
                            roomNumber: booking.room_number,
                            courseId: booking.course_id,
                        }
                    });
                });
    
                window.calendar.render();
            } catch (error) {
                console.error("Failed to load bookings:", error);
            }
        }
    </script>
    
</body>
</html>
